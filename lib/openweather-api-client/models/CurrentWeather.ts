/* tslint:disable */
/* eslint-disable */
/**
 * OpenWeather One Call API
 * OpenWeather One Call API 3.0 for comprehensive weather data
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WeatherInfo } from './WeatherInfo';
import {
    WeatherInfoFromJSON,
    WeatherInfoFromJSONTyped,
    WeatherInfoToJSON,
    WeatherInfoToJSONTyped,
} from './WeatherInfo';

/**
 * 
 * @export
 * @interface CurrentWeather
 */
export interface CurrentWeather {
    /**
     * 
     * @type {number}
     * @memberof CurrentWeather
     */
    dt?: number;
    /**
     * 
     * @type {number}
     * @memberof CurrentWeather
     */
    sunrise?: number;
    /**
     * 
     * @type {number}
     * @memberof CurrentWeather
     */
    sunset?: number;
    /**
     * 
     * @type {number}
     * @memberof CurrentWeather
     */
    temp?: number;
    /**
     * 
     * @type {number}
     * @memberof CurrentWeather
     */
    feelsLike?: number;
    /**
     * 
     * @type {number}
     * @memberof CurrentWeather
     */
    pressure?: number;
    /**
     * 
     * @type {number}
     * @memberof CurrentWeather
     */
    humidity?: number;
    /**
     * 
     * @type {number}
     * @memberof CurrentWeather
     */
    dewPoint?: number;
    /**
     * 
     * @type {number}
     * @memberof CurrentWeather
     */
    uvi?: number;
    /**
     * 
     * @type {number}
     * @memberof CurrentWeather
     */
    clouds?: number;
    /**
     * 
     * @type {number}
     * @memberof CurrentWeather
     */
    visibility?: number;
    /**
     * 
     * @type {number}
     * @memberof CurrentWeather
     */
    windSpeed?: number;
    /**
     * 
     * @type {number}
     * @memberof CurrentWeather
     */
    windDeg?: number;
    /**
     * 
     * @type {Array<WeatherInfo>}
     * @memberof CurrentWeather
     */
    weather?: Array<WeatherInfo>;
}

/**
 * Check if a given object implements the CurrentWeather interface.
 */
export function instanceOfCurrentWeather(value: object): value is CurrentWeather {
    return true;
}

export function CurrentWeatherFromJSON(json: any): CurrentWeather {
    return CurrentWeatherFromJSONTyped(json, false);
}

export function CurrentWeatherFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrentWeather {
    if (json == null) {
        return json;
    }
    return {
        
        'dt': json['dt'] == null ? undefined : json['dt'],
        'sunrise': json['sunrise'] == null ? undefined : json['sunrise'],
        'sunset': json['sunset'] == null ? undefined : json['sunset'],
        'temp': json['temp'] == null ? undefined : json['temp'],
        'feelsLike': json['feels_like'] == null ? undefined : json['feels_like'],
        'pressure': json['pressure'] == null ? undefined : json['pressure'],
        'humidity': json['humidity'] == null ? undefined : json['humidity'],
        'dewPoint': json['dew_point'] == null ? undefined : json['dew_point'],
        'uvi': json['uvi'] == null ? undefined : json['uvi'],
        'clouds': json['clouds'] == null ? undefined : json['clouds'],
        'visibility': json['visibility'] == null ? undefined : json['visibility'],
        'windSpeed': json['wind_speed'] == null ? undefined : json['wind_speed'],
        'windDeg': json['wind_deg'] == null ? undefined : json['wind_deg'],
        'weather': json['weather'] == null ? undefined : ((json['weather'] as Array<any>).map(WeatherInfoFromJSON)),
    };
}

  export function CurrentWeatherToJSON(json: any): CurrentWeather {
      return CurrentWeatherToJSONTyped(json, false);
  }

  export function CurrentWeatherToJSONTyped(value?: CurrentWeather | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dt': value['dt'],
        'sunrise': value['sunrise'],
        'sunset': value['sunset'],
        'temp': value['temp'],
        'feels_like': value['feelsLike'],
        'pressure': value['pressure'],
        'humidity': value['humidity'],
        'dew_point': value['dewPoint'],
        'uvi': value['uvi'],
        'clouds': value['clouds'],
        'visibility': value['visibility'],
        'wind_speed': value['windSpeed'],
        'wind_deg': value['windDeg'],
        'weather': value['weather'] == null ? undefined : ((value['weather'] as Array<any>).map(WeatherInfoToJSON)),
    };
}

