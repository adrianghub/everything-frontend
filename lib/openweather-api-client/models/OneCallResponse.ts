/* tslint:disable */
/* eslint-disable */
/**
 * OpenWeather One Call API
 * OpenWeather One Call API 3.0 for comprehensive weather data
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CurrentWeather } from './CurrentWeather';
import {
    CurrentWeatherFromJSON,
    CurrentWeatherFromJSONTyped,
    CurrentWeatherToJSON,
    CurrentWeatherToJSONTyped,
} from './CurrentWeather';
import type { HourlyForecast } from './HourlyForecast';
import {
    HourlyForecastFromJSON,
    HourlyForecastFromJSONTyped,
    HourlyForecastToJSON,
    HourlyForecastToJSONTyped,
} from './HourlyForecast';
import type { Alert } from './Alert';
import {
    AlertFromJSON,
    AlertFromJSONTyped,
    AlertToJSON,
    AlertToJSONTyped,
} from './Alert';
import type { DailyForecast } from './DailyForecast';
import {
    DailyForecastFromJSON,
    DailyForecastFromJSONTyped,
    DailyForecastToJSON,
    DailyForecastToJSONTyped,
} from './DailyForecast';

/**
 * 
 * @export
 * @interface OneCallResponse
 */
export interface OneCallResponse {
    /**
     * 
     * @type {number}
     * @memberof OneCallResponse
     */
    lat?: number;
    /**
     * 
     * @type {number}
     * @memberof OneCallResponse
     */
    lon?: number;
    /**
     * 
     * @type {string}
     * @memberof OneCallResponse
     */
    timezone?: string;
    /**
     * 
     * @type {number}
     * @memberof OneCallResponse
     */
    timezoneOffset?: number;
    /**
     * 
     * @type {CurrentWeather}
     * @memberof OneCallResponse
     */
    current?: CurrentWeather;
    /**
     * 
     * @type {Array<HourlyForecast>}
     * @memberof OneCallResponse
     */
    hourly?: Array<HourlyForecast>;
    /**
     * 
     * @type {Array<DailyForecast>}
     * @memberof OneCallResponse
     */
    daily?: Array<DailyForecast>;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof OneCallResponse
     */
    alerts?: Array<Alert>;
}

/**
 * Check if a given object implements the OneCallResponse interface.
 */
export function instanceOfOneCallResponse(value: object): value is OneCallResponse {
    return true;
}

export function OneCallResponseFromJSON(json: any): OneCallResponse {
    return OneCallResponseFromJSONTyped(json, false);
}

export function OneCallResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OneCallResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'lat': json['lat'] == null ? undefined : json['lat'],
        'lon': json['lon'] == null ? undefined : json['lon'],
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
        'timezoneOffset': json['timezone_offset'] == null ? undefined : json['timezone_offset'],
        'current': json['current'] == null ? undefined : CurrentWeatherFromJSON(json['current']),
        'hourly': json['hourly'] == null ? undefined : ((json['hourly'] as Array<any>).map(HourlyForecastFromJSON)),
        'daily': json['daily'] == null ? undefined : ((json['daily'] as Array<any>).map(DailyForecastFromJSON)),
        'alerts': json['alerts'] == null ? undefined : ((json['alerts'] as Array<any>).map(AlertFromJSON)),
    };
}

  export function OneCallResponseToJSON(json: any): OneCallResponse {
      return OneCallResponseToJSONTyped(json, false);
  }

  export function OneCallResponseToJSONTyped(value?: OneCallResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'lat': value['lat'],
        'lon': value['lon'],
        'timezone': value['timezone'],
        'timezone_offset': value['timezoneOffset'],
        'current': CurrentWeatherToJSON(value['current']),
        'hourly': value['hourly'] == null ? undefined : ((value['hourly'] as Array<any>).map(HourlyForecastToJSON)),
        'daily': value['daily'] == null ? undefined : ((value['daily'] as Array<any>).map(DailyForecastToJSON)),
        'alerts': value['alerts'] == null ? undefined : ((value['alerts'] as Array<any>).map(AlertToJSON)),
    };
}

