/* tslint:disable */
/* eslint-disable */
/**
 * OpenWeather One Call API
 * OpenWeather One Call API 3.0 for comprehensive weather data
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Alert
 */
export interface Alert {
    /**
     * 
     * @type {string}
     * @memberof Alert
     */
    senderName?: string;
    /**
     * 
     * @type {string}
     * @memberof Alert
     */
    event?: string;
    /**
     * 
     * @type {number}
     * @memberof Alert
     */
    start?: number;
    /**
     * 
     * @type {number}
     * @memberof Alert
     */
    end?: number;
    /**
     * 
     * @type {string}
     * @memberof Alert
     */
    description?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Alert
     */
    tags?: Array<string>;
}

/**
 * Check if a given object implements the Alert interface.
 */
export function instanceOfAlert(value: object): value is Alert {
    return true;
}

export function AlertFromJSON(json: any): Alert {
    return AlertFromJSONTyped(json, false);
}

export function AlertFromJSONTyped(json: any, ignoreDiscriminator: boolean): Alert {
    if (json == null) {
        return json;
    }
    return {
        
        'senderName': json['sender_name'] == null ? undefined : json['sender_name'],
        'event': json['event'] == null ? undefined : json['event'],
        'start': json['start'] == null ? undefined : json['start'],
        'end': json['end'] == null ? undefined : json['end'],
        'description': json['description'] == null ? undefined : json['description'],
        'tags': json['tags'] == null ? undefined : json['tags'],
    };
}

  export function AlertToJSON(json: any): Alert {
      return AlertToJSONTyped(json, false);
  }

  export function AlertToJSONTyped(value?: Alert | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'sender_name': value['senderName'],
        'event': value['event'],
        'start': value['start'],
        'end': value['end'],
        'description': value['description'],
        'tags': value['tags'],
    };
}

